
bin/tournament_server -- script which will run a new tournament, capturing output and result. env var `REPOSITORY_REPO_NAME` is expected to be the repo name of a player. it is added to the global list of competing players
bin/docker -- x86 docker binary, version tied to time of repo authoring
bin/docker-hook -- python web server which will accept POST request and launch cmd defined at run time. used to launch `bin/tournament`. json payload can be used to define `REPOSITORY_*` env vars which sets `REPOSITORY_REPO_NAME` for `tournament_server` script. This web server processes requests one at a time, guarentees only a single tournament being run at a time.

app.rb -- main entry point for fighting players. Has options for what type / how to run the tournament

run_player.rb -- runs a player, communicates via STDIN/OUT

-- shim - wraps player class so that it can connect to the wire --
player_shim/player_shim.rb -- convenience interface to wire
player_shim/receiver.rb -- sits on the wire and drives shim


